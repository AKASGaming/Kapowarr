{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kapowarr Docs","text":"<p>Kapowarr is a software to build and manage a comic book library, fitting in the *arr suite of software.</p> <p>Please note the docs are maintained by MrCas and the Kapowarr team. As the software is constantly changing, the docs may not be completely up-to-date. Bear with us. </p> <p>Getting started:</p> <ul> <li>Installation</li> <li>Setup After Installation</li> </ul> <p>General Information:</p> <ul> <li>FAQ</li> <li>API Docs</li> </ul>"},{"location":"#workings","title":"Workings","text":"<p>Kapowarr allows you to build a digital library of comics. You can add volumes, map them to a folder and start managing! Download issues of the volume (or TPB's), rename them and move them. The whole process is automated and is all customizable in the settings.</p> <p>Each day, each volume is checked to see if a new issue has come out and if so, it will immediately be downloaded and added to your library.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Get loads of metadata about the volumes and issues in your library</li> <li>Run a \"Search Monitored\" to download whole volumes with one click</li> <li>Or use \"Manual Search\" to decide yourself what to download</li> <li>Support for downloading directly from servers, via MediaFire and Mega</li> <li>Downloaded files automatically get moved wherever you want and renamed in the format you desire</li> <li>Zip files can be extracted and it's contents renamed after downloading or with a single click</li> <li>The recognizable UI from the *arr suite of software</li> </ul>"},{"location":"#contact","title":"Contact","text":"<ul> <li>For support, a discord server is available</li> <li>Alternatively, make an issue</li> </ul>"},{"location":"api/","title":"API documentation","text":""},{"location":"api/#coming-soon","title":"Coming Soon","text":""},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#does-kapowarr-support-xyz","title":"Does Kapowarr support XYZ?","text":"<p>\"XYZ\" can be \"Magazines\" or \"Manga\" or something else. For now, there is a simple answer: if it can be found on ComicVine, you can add it to Kapowarr (and use features like renaming and unzipping). If getcomics offers downloads for it, you can also download for it.</p>"},{"location":"faq/#when-will-xyz-be-added","title":"When will XYZ be added?","text":"<p>\"XYZ\" can be \"Library Import\" or \"Exporting metadata\" or something else. First, check out the project board to see if it's already on there and if so, at what stage it is. If it's not, check if a feature request is already made for it on the issues page and otherwise make a feature request for it there.</p>"},{"location":"faq/#kapowarr-unable-to-open-database-file","title":"Kapowarr unable to open database file","text":"<p>If using Kapowarr with a mapped folder for the app-db rather than a docker volume, then Kapowarr will need to have permission on the folder being mapped in order to function. The simplest way to achieve this is to give read, write, and execute permissions on the folder ('rwx'), and change ownership of the folder to the user that runs the docker container (usually user 1000).  </p> <p>This can be achieved by running <code>chown 1000 /mapped/folder</code> to set the ownership, and <code>chmod 770 /mapped/folder</code> to set the permissions. If you are mapping in <code>/opt/kapowarr/</code> (as in our installation example), these commands would be <code>chown 1000 /opt/kapowarr/</code> and <code>chmod 770 /opt/kapowarr</code>, respectively.</p> <p>If you are using an alternate folder, or an alternate user, switch out the relevant detail in the examples.</p>"},{"location":"installation/","title":"Installation","text":"<p>The recommended way to install Kapowarr is using Docker. After installing Kapowarr, it is advised to read the Setup After Installation page.</p>"},{"location":"installation/#docker","title":"Docker","text":""},{"location":"installation/#create-volume-or-folder","title":"Create volume or folder","text":"<p>Kapowarr needs some permanent place to put the database file. This can be a docker volume, or a folder on the host machine.</p> Docker VolumeLocal Folder <p>Both of these options will create a named volume that you can then use when launching the container.</p> Docker CLIPortainer <pre><code>docker volume create kapowarr-db\n</code></pre> <ul> <li>Open <code>Volumes</code></li> <li>Click <code>Add Volume</code></li> <li>Enter name matching the one you'll use in compose (<code>kapowarr-db</code>, in the above example)</li> <li>Click <code>Create the volume</code></li> <li>Open <code>Stacks</code></li> <li>Create the stack with the named volume in it.</li> </ul> <p>If you'd prefer to use a local folder on the host machine for storing config, Linux standards would suggest putting that in <code>/opt/application_name</code>, as the <code>/opt</code> directory is where program options should be stored. In this case, you'd create the desired folder with something like <code>mkdir /opt/Kapowarr/db</code>, and replace 'kapowarr-db:/app/db' with '/opt/Kapowarr/db:/app/db'. Note, the permissions on this folder need to allow the container to read, write, and execute inside it. See the note in the FAQ for more info.</p>"},{"location":"installation/#launch-container","title":"Launch container","text":"<p>Now that the database file can be stored somewhere, we can launch the container.</p> Docker CLIDocker Compose <p>The command to get the docker container running can be found below: <pre><code>docker run -d \\\n--name kapowarr \\\n-v kapowarr-db:/app/db \\\n-v /path/to/download_folder:/app/temp_downloads \\\n-v /path/to/root_folder:/comics-1 \\\n-p 5656:5656\n    mrcas/kapowarr:latest\n</code></pre> A few notes about this command:</p> <ol> <li>If you're using a folder on the host machine instead of a docker volume to store the database file, replace <code>kapowarr-db</code> with the path to the host folder. E.g. <code>/opt/Kapowarr/db:/app/db</code>.</li> <li>Replace <code>/path/to/download_folder</code> with the path to your desired download folder. Everything is downloaded to this folder and when completed, moved out of to their final destination. It's smart to set this on a disk that can sustain more writes than normal. Ideally something like a non-network mounted ssd.</li> <li>Replace <code>/path/to/root_folder</code> with the path to your desired root folder. Then, this folder will get mapped to <code>/comics-1</code> inside the docker container. When adding a root folder in Kapowarr, you'll then set its location as <code>/comics-1</code>, mapping it this way to where ever <code>/path/to/root_folder</code> may be.</li> <li>You can map multiple root folders by repeating <code>-v /path/to/root_folder:/comics-1</code> in the command, but then supplying different values for <code>/path/to/root_folder</code> and <code>/comics-1</code>. E.g. <code>-v /media/Comics-2:/comics-2</code>, then add <code>/comics-2</code> as your second root folder in Kapowarr.</li> <li>Information on how to change the port can be found on the Setup After Installation page.</li> </ol> <p>The contents of the docker-compose.yml file would look like this: <pre><code>version: '3.3'\nservices:\nkapowarr:\ncontainer_name: kapowarr\nvolumes:\n- 'kapowarr-db:/app/db'\n- '/path/to/download_folder:/app/temp_downloads'\n- '/path/to/root_folder:/comics-1'\nports:\n- '5656:5656'\nimage: 'mrcas/kapowarr:latest'\n</code></pre> A few important notes about the command/file before launching the container:</p> <ol> <li>If you're using a folder on the host machine instead of a docker volume to store the database file, replace <code>kapowarr-db</code> with the path to the host folder. E.g. <code>/opt/Kapowarr/db:/app/db</code>.</li> <li>Replace <code>/path/to/download_folder</code> with the path to your desired download folder on the host machine. Everything is downloaded to this folder and when completed, moved out of to their final destination. It's smart to set this on a disk that can sustain more writes than normal. Ideally something like a non-network mounted ssd, but pretty much everything will suffice.</li> <li>Replace <code>/path/to/root_folder</code> with the path to your desired root folder on the host machine. Then, this folder will get mapped to <code>/comics-1</code> inside the docker container. When adding a root folder in Kapowarr, you'll then set it's location as <code>/comics-1</code>, mapping it this way to where ever <code>/path/to/root_folder</code> may point.</li> <li>You can map multiple root folders by repeating <code>- /path/to/root_folder:/comics-1</code> , but then supplying different values for <code>/path/to/root_folder</code> and <code>/comics-1</code>. E.g. <code>- /media/Comics-2:/comics-2</code> for the Docker Compose file, then add <code>/comics-2</code> as your second root folder in Kapowarr.</li> <li>Information on how to change the port can be found on the Setup After Installation page.</li> </ol>"},{"location":"installation/#docker-example","title":"Docker example","text":"Docker CLIDocker Compose <pre><code>docker run -d \\\n--name kapowarr \\\n-v kapowarr-db:/app/db \\\n-v /home/cas/media/Downloads:/app/temp_downloads \\\n-v /home/cas/media/Comics:/comics-1 \\\n-v /home/cas/other_media/Comics-2:/comics-2 \\\n-p 5656:5656\n    mrcas/kapowarr:latest\n</code></pre> <pre><code>version: '3.3'\nservices:\nkapowarr:\ncontainer_name: kapowarr\nvolumes:\n- 'kapowarr-db:/app/db'\n- '/home/cas/media/Downloads:/app/temp_downloads'\n- '/home/cas/media/Comics:/RF'\n- '/home/cas/media/Comics-2:/RF-2'\nports:\n- '5656:5656'\nimage: 'mrcas/kapowarr:latest'\n</code></pre> <p>In this example, we use a Docker volume as the place to store the database file, set <code>/home/cas/media/Downloads</code> as the download folder and we map the folder <code>/home/cas/media/Comics</code> to <code>/comics-1</code> and <code>/home/cas/other_media/Comics-2</code> to <code>/comics-2</code>. In Kapowarr, you'd then add <code>/comics-1</code> and <code>/comics-2</code> as root folders.</p>"},{"location":"installation/#manual-install","title":"Manual Install","text":"WindowsUbuntumacOS <p>On Windows, there are a couple of extra steps involved.  </p> <ol> <li>Download and install Python. This is the framework Kapowarr runs on top of. Make sure you select to add Python to PATH when prompted. This will make installing requirements much easier.</li> <li>Download (or clone) the latest Kapowarr release.  </li> <li>Extract the zip file to a folder on your machine.    We suggest something straightforward - <code>C:\\services\\Kapowarr</code> is what we'll use as an example.</li> <li>Install the required python modules (found in <code>requirements.txt</code>).    This can be achieved from a command prompt, by changing to the folder you've extracted Kapowarr to and running a python command.    <pre><code>cd C:\\services\\Kapowarr\npython -m pip install -r requirements.txt\n</code></pre></li> <li>Run Kapowarr with the command <code>python C:\\services\\Kapowarr\\kapowarr.py</code>.</li> <li>Access Kapowarr with the IP of the host machine and port 5656.    If it's the machine you're using, try http://localhost:5656</li> </ol> <p>If you want Kapowarr to run in the background, without you having to start it each time your machine restarts, a tool called nssm will allow you to configure Kapowarr to run as a system service. It is recommended that you set it up as above before doing this, as it will allow you to see any errors you may encounter on screen (instead of having nssm intercept them).</p> <p>Coming soon.</p> <p>Use docker. Permissions on macOS (and GateKeeper) make this needlessly complex.  </p>"},{"location":"rate_limiting/","title":"Rate limiting","text":"<p>This page covers how Kapowarr handles with the rate limits of services it uses.</p>"},{"location":"rate_limiting/#comicvine","title":"ComicVine","text":"<p>Hourly, Kapowarr finds the volumes that haven't had a metadata fetch for more than a day. It tries to fetch for as many volumes as possible. If it can't fetch for them all in one go, the ones that didn't get fetched, get preference the next hour.</p> <p>With this setup, all volumes (unless you have an absurdly big library) get updated every day and as little as possible requests are made. When we still surpass the limit, the volumes that need to be fetched the most (the ones that haven't been updated for the longest) get preference to ensure that they \"keep up\". Kapowarr can update at most 25.000 volumes and 25.000 issues per hour.</p>"},{"location":"rate_limiting/#mega","title":"Mega","text":"<p>If a Mega download reaches the rate limit of the account mid-download (no way to calculate this beforehand), the download is canceled and all other Mega downloads in the download queue are removed. From that point on, Mega downloads are skipped until we can download from it again. Alternative services like MediaFire and GetComics are used instead of Mega while we wait for the limit to go down again. If you have a Mega account that offers higher limits, it's advised to add it at Settings -&gt; Download -&gt; Credentials, so that Kapowarr can take advantage of it.</p>"},{"location":"settings/","title":"Settings","text":"<p>This page will cover the Settings sections. Each setting type is grouped based on what they're related to.</p>"},{"location":"settings/#media-management","title":"Media Management","text":"<p>Here is where you configure your settings related to how your media files are handled.</p>"},{"location":"settings/#naming","title":"Naming","text":""},{"location":"settings/#volume-folder-naming","title":"Volume Folder Naming","text":"<p>The naming format for the volume folder (folder structure allowed). Available variables are:</p> <ul> <li>{series_name}</li> <li>{clean_series_name}</li> <li>{volume_number}</li> <li>{comicvine_id}</li> <li>{year}</li> <li>{publisher}</li> </ul> <p>For example, <code>{series_name} ({year})</code> will come out as \"Invincible Iron Man (2019)\".</p>"},{"location":"settings/#file-naming","title":"File Naming","text":"<p>The naming format for the file itself. Available variables are:</p> <ul> <li>{series_name}</li> <li>{clean_series_name}</li> <li>{volume_number}</li> <li>{comicvine_id}</li> <li>{year}</li> <li>{publisher}</li> <li>{issue_comicvine_id}</li> <li>{issue_number}</li> <li>{issue_title}</li> <li>{issue_release_date}</li> <li>{issue_release_year}</li> </ul> <p>For example, <code>{series_name} ({year}) Volume {volume_number} Issue {issue_number} {issue_title}</code> would come out as \"Invincible Iron Man (2008) Volume 01 Issue 001 The Five Nightmares Part 1 Armageddon Days.cbz\".</p>"},{"location":"settings/#file-naming-for-tpb","title":"File Naming For TPB","text":"<p>The naming format for the file itself (if it's a TPB). Available variables are:</p> <ul> <li>{series_name}</li> <li>{clean_series_name}</li> <li>{volume_number}</li> <li>{comicvine_id}</li> <li>{year}</li> <li>{publisher}</li> </ul> <p>For example, <code>{series_name} ({year}) Volume {volume_number} TPB</code> would come out as \"Invincible Iron Man (2019) Volume 01 TPB.cbz\"</p>"},{"location":"settings/#file-naming-for-issues-without-title","title":"File Naming For Issues Without Title","text":"<p>The naming format for the file itself if there is no issue-specific title. Available variables are:</p> <ul> <li>{series_name}</li> <li>{clean_series_name}</li> <li>{volume_number}</li> <li>{comicvine_id}</li> <li>{year}</li> <li>{publisher}</li> <li>{issue_comicvine_id}</li> <li>{issue_number}</li> <li>{issue_release_date}</li> <li>{issue_release_year}</li> </ul> <p>For example, <code>{series_name} ({year}) Volume {volume_number} Issue {issue_number}</code> would come out as \"Invincible Iron Man (2008) Volume 01 Issue 001.cbz\".</p>"},{"location":"settings/#treat-volume-issues-as-no-title","title":"Treat Volume Issues as \"No Title\"","text":"<p>Sometimes a volume will consist of multiple sub-volumes. This setting controls whether Kapowarr should name these the same as issues without a title or not. See the example below: |Setting|Example Result| |-|-| |Enabled|Invincible Compendium (2011) Volume 1 Issue 1-2.cbrInvincible Compendium (2011) Volume 1 Issue 3.cbr| |Disabled|Invincible Compendium (2011) Volume 1 - 2.cbrInvincible Compendium (2011) Volume 3.cbr|</p>"},{"location":"settings/#issue-padding","title":"Issue Padding","text":"<p>This defines how issue numbers are 'padded' (3 digits, 2 digits, etc.). This is useful in the case of file sorting, as many operating systems sort alphabetically, instead of alphanumerically. To them, because 1 is lower than 2, \"11\" comes before \"20\". To get around this, we 'pad' the numbers with leading zeroes. \"1\" becomes\"001\", \"11\" becomes \"011\", and \"2\" becomes \"002\" - resulting in a more accurate sort.</p> <p>Options are:</p> <ul> <li>x (no padding, i.e. 1,2,...10)</li> <li>0x (2 digits, i.e. 01, 02...10)</li> <li>00x (3 digits, i.e. 001, 002...010...099,100)</li> </ul>"},{"location":"settings/#volume-padding","title":"Volume Padding","text":"<p>This defines how volume numbers are 'padded' (3 digits, 2 digits, etc.). This is useful in the case of file sorting, as many operating systems sort alphabetically, instead of alphanumerically. To them, because 1 is lower than 2, \"11\" comes before \"20\". To get around this, we 'pad' the numbers with leading zeroes. \"1\" becomes\"001\", \"11\" becomes \"011\", and \"2\" becomes \"002\" - resulting in a more accurate sort.</p> <p>Options are:</p> <ul> <li>x (no padding, i.e. 1,2,...10)</li> <li>0x (2 digits, i.e. 01, 02...10)</li> <li>00x (3 digits, i.e. 001, 002...,010...099,100)</li> </ul>"},{"location":"settings/#unzipping","title":"Unzipping","text":"<p>Unzip downloads will extract zip files after downloading. This is useful for 'pack' style downloads, where the download contains multiple issues. Note: if Kapowarr determines that a file in the zip file is not related to the volume, it will not be extracted and will be deleted when the zip file is finished being unpacked. If you find faulty deletions occurring, please lodge an issue for this.</p>"},{"location":"settings/#root-folders","title":"Root Folders","text":"<p>Root folders are the base folders that Kapowarr works in. All content is put in these folders.  </p> <p>When adding a volume (or when editing one), you choose in which root folder all content for that volume is put. Kapowarr will never touch any files outside the root folders (except in the download folder). You might have multiple root folders because you store your comics on multiple drives or want different access rights to certain volumes, to name a few reasons.</p> <p>Root folders can be added at Settings -&gt; Media Management -&gt; Root Folders. Note: If you use docker to run Kapowarr and have followed the example given in the installation instructions, this is where you would enter <code>/comics-1</code>, <code>/comics-2</code>, <code>/RF</code>, <code>/RF2</code>, etc.</p> <p>Note: at least one of these must be set before you are able to add any volumes to monitor, as without it Kapowarr cannot know where to put the files.</p>"},{"location":"settings/#download","title":"Download","text":""},{"location":"settings/#download-location","title":"Download Location","text":""},{"location":"settings/#direct-download-temporary-folder","title":"Direct Download Temporary Folder","text":"<p>This is where the files being downloaded get written to before being processed and moved to the correct location. The default location for this is <code>/app/temp_downloads</code>.</p> <p>If you run Kapowarr using Docker, leave this set to the default value of <code>/app/temp_downloads</code> and instead change the value of <code>/path/to/download_folder</code> in the Docker command (reference). If you have a manual install, you can change this value to whatever you want. It is recommended to be outside your root folders.</p>"},{"location":"settings/#empty-temporary-download-folder","title":"Empty Temporary Download Folder","text":"<p>This isn't so much of a setting as it is a tool. It will completely empty the download folder of all files. This can be handy if the application crashed while downloading, leading to half-downloaded files in the folder.  </p>"},{"location":"settings/#service-preference","title":"Service preference","text":"<p>Kapowarr has the ability to download directly from servers, but also to download from services like MediaFire and Mega. When an issue is queried on getcomics and found to have multiple possible download sources, this defines which link takes priority. If the first download fails, Kapowarr will try the next service in order. If you have an account for one of these services (see Credentials setting), you might want to put that one at the top, to make Kapowarr take advantage of the extra features that the account offers (extra bandwidth, higher rate limit, etc.). Options are:</p> <ul> <li>Mega</li> <li>Mediafire</li> <li>Getcomics (direct link)</li> </ul>"},{"location":"settings/#credentials","title":"Credentials","text":"<p>If you have a paid account with Mega, Kapowarr has the ability to use this account. If you provide your login credentials for the service, Kapowarr will then take advantage of the extra features that your account has access to (higher speeds and caps, usually).  </p>"},{"location":"settings/#general","title":"General","text":""},{"location":"settings/#host","title":"Host","text":"<p>This section defines how Kapowarr binds to a port/IP when starting up. Any setting here requires you restart Kapowarr after saving it for it to apply.</p>"},{"location":"settings/#bind-address","title":"Bind Address","text":"<p>This tells Kapowarr what IP to bind to. If you specify an IP that is not on the machine running Kapowarr, you will encounter errors. Using <code>0.0.0.0</code> will have Kapowarr bind to all interfaces it finds on the host machine.</p> <p>Note: this setting is not applicable if you have Kapowarr deployed with Docker.</p>"},{"location":"settings/#port-number","title":"Port Number","text":"<p>This tells Kapowarr what port to listen on. The default is <code>5656</code>, which would put the Kapowarr UI on <code>http://ip.of.host.machine:5656/</code>. If you wish to change the port, it can be changed here. Note: this setting is not applicable if you have Kapowarr deployed with Docker. This should be done by following the examples below.</p> Docker CLIDocker ComposeManual Install <p>Alter the command to run the container and replace <code>-p 5656:5656</code> with <code>-p {PORT}:5656</code>, where <code>{PORT}</code> is the desired port (e.g. <code>-p 8009:5656</code>). Run the container with the new version of the command (you will need to remove the old container if you had it running before).</p> <p>Alter the file to run the container and replace <code>- 5656:5656</code> with <code>- {PORT}:5656</code>, where <code>{PORT}</code> is the desired port (e.g. <code>- 8009:5656</code>). Then re-run the container with the new version of the file.</p> <p>Edit the port number here by changing the value to the desired port. Press save, then restart Kapowarr.</p>"},{"location":"settings/#base-url","title":"Base URL","text":"<p>This is use for reverse proxy support - the default is empty. If you want to put Kapowarr behind a proxy (so you can access via a nice URL), set a Base URL (it must start with a <code>/</code> character).  </p> <p>To get <code>http://example.com/kapowarr</code>, you would set your reverse proxy to forward the <code>/kapowarr</code> path to the IP and port of your Kapowarr instance, and set Base URL to <code>/kapowarr</code>.</p>"},{"location":"settings/#security","title":"Security","text":""},{"location":"settings/#login-password","title":"Login Password","text":"<p>You might want to set a password to restrict access to the web-ui (and API). This is optional (but highly recommended if you are exposing Kapowarr to the internet). From then on, it is required to enter a password in order to gain access to the web-ui (and the API). If you want to disable the password, set an empty value for the setting and save.</p>"},{"location":"settings/#api-key","title":"API Key","text":"<p>This is where Kapowarr defines the API key for any queries made to the Kapowarr API. Documentation for the API itself will be coming in due course.</p>"},{"location":"settings/#comic-vine-api-key","title":"Comic Vine API Key","text":"<p>Kapowarr uses ComicVine as its metadata source. To fetch the metadata from ComicVine, Kapowarr needs access to the API, which requires an API key.</p> <ol> <li>Go to the API page of ComicVine.</li> <li>If you don't have a free account at ComicVine already, sign up and once logged in, revisit the linked page.</li> <li>You'll see your ComicVine API key, which is 40 characters long and contains the letters a-f and numbers 0-9 (e.g. <code>da39a3ee5e6b4b0d3255bfef95601890afd80709</code>).</li> <li>Copy that API key and enter it as the value of Settings -&gt; General -&gt; Comic Vine API -&gt; Comic Vine API Key in the web-ui. Don't forget to save.</li> </ol> <p>On the documentation page about rate limiting, information can be found about the handling of the ComicVine API rate limit.</p>"},{"location":"settings/#ui","title":"UI","text":""},{"location":"settings/#theme","title":"Theme","text":"<p>The default theme is \"Light\". If you like dark mode, select \"Dark\".</p>"},{"location":"settings/#logging","title":"Logging","text":""},{"location":"settings/#log-level","title":"Log Level","text":"<p>The default log level is 'Info'. This means that only things that would appear in a console (or stdout) get logged. If troubleshooting, setting this to 'Debug' will make the system log what it's doing in much more detail.  </p> <p>Note that this should be set to 'Info' when not debugging, as the log files can start to get rather large.</p>"},{"location":"setup_after_installation/","title":"Setup after installation","text":"<p>After installing Kapowarr, you should have access to the web-ui. Kapowarr needs some configuration in order for it to work properly.</p>"},{"location":"setup_after_installation/#port","title":"Port","text":"<p>The first thing to do is decide if you want to leave Kapowarr on the default port of 5656. If you do, you can go to the next step. If you want to change the port, refer to port on the Setting page.  </p>"},{"location":"setup_after_installation/#authentication","title":"Authentication","text":"<p>If you want to put a password on your instance of Kapowarr, refer to Authentication. Note: If you are exposing Kapowarr to the internet, we highly recommend this.</p>"},{"location":"setup_after_installation/#comicvine-api-key","title":"ComicVine API key","text":"<p>Kapowarr uses ComicVine as its metadata source. To fetch the metadata from ComicVine, Kapowarr needs access to the API, which requires an API key. See Comic Vine API Key on the Settings page for how to get one.  </p> <p>Once you've entered your key and hit \"Save\", move on to Root Folders.  </p>"},{"location":"setup_after_installation/#root-folders","title":"Root Folders","text":"<p>Root folders are the base folders that Kapowarr works in. All content is put in these folders. Refer to Root Folders for more details. Note: at least one of these must be set before you are able to add any volumes to monitor, as without it Kapowarr cannot know where to put the files.</p>"},{"location":"setup_after_installation/#downloading","title":"Downloading","text":"<p>Kapowarr's biggest feature is being able to download comics. The Settings -&gt; Download section has all settings regarding the downloading.</p>"},{"location":"setup_after_installation/#download-folder","title":"Download folder","text":"<p>The download folder is where all downloads are downloaded to, before they get moved to their final destination. In most cases, the default of <code>/app/temp_downloads</code> works best. If you wish to change this, refer to Direct Download Temporary Folder.  </p>"},{"location":"setup_after_installation/#service-preference","title":"Service preference","text":"<p>If you have an account with Mega, set that service as the priority and add a credential for it. The other services will then be used as a fallback option for if a link fails.</p> <p>For a full explanation, see Service Preference.  </p>"},{"location":"setup_after_installation/#credentials","title":"Credentials","text":"<p>This only applies if you have an account with Mega (for now). Refer to Credentials for more info.</p>"},{"location":"setup_after_installation/#building-up-a-library","title":"Building up a library","text":"<p>Now you're ready to build a library. At Volumes -&gt; Add Volume, you can search for volumes and add them to your library. Once you add one, a folder is automatically created for the volume in the root folder selected (see Settings -&gt; Media Management -&gt; File Naming -&gt; Volume Folder Naming). Then you can start downloading content for the volume, and all files will be put in this volume folder. The naming of the files follows the format set in the settings (see Settings -&gt; Media Management -&gt; File Naming).</p>"},{"location":"setup_after_installation/#importing-a-library","title":"Importing a library","text":"<p>If you have an existing library that you want to import into Kapowarr, use the \"Library Import\" feature found at Volumes -&gt; Library Import. </p>"}]}